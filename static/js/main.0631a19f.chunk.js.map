{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","setSelectedTodo","selectedTodo","className","map","todo","classNames","id","completed","title","type","onClick","handleButtonClick","TodoFilter","query","setQuery","setApliedQuery","status","setStatus","applyQuery","useCallback","debounce","value","onChange","event","target","placeholder","style","pointerEvents","length","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","loading","user","setLoading","setUser","useEffect","userId","finally","href","email","name","App","useState","setTodos","appliedQuery","filteredTodos","sortBy","Status","filter","toLowerCase","includes","ALL","ACTIVE","COMPLETED","getFilteredTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0631a19f.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  setSelectedTodo: (value: Todo) => void,\n  selectedTodo?: Todo | null,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  setSelectedTodo,\n  selectedTodo,\n}) => {\n  const handleButtonClick = (todo: Todo) => {\n    setSelectedTodo(todo);\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n\n        {todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className={classNames(\n              { 'has-background-info-light': selectedTodo?.id === todo.id },\n            )}\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={\n                todo.completed\n                  ? 'has-text-success'\n                  : 'has-text-danger'\n              }\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => handleButtonClick(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={classNames(\n                    'far', {\n                      'fa-eye-slash': todo.id === selectedTodo?.id,\n                      'fa-eye': todo.id !== selectedTodo?.id,\n                    },\n                  )}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import debounce from 'lodash.debounce';\nimport { useCallback } from 'react';\n\ntype Props = {\n  setQuery: (text: string) => void,\n  setApliedQuery: (text: string) => void,\n  query: string,\n  status: string,\n  setStatus: (text: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  setQuery,\n  setApliedQuery,\n  status,\n  setStatus,\n}) => {\n  const applyQuery = useCallback(\n    debounce(setApliedQuery, 1000),\n    [],\n  );\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    applyQuery(event.target.value);\n  };\n\n  const handleButtonClick = () => {\n    setQuery('');\n    setApliedQuery('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={(event) => setStatus(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          value={query}\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          onChange={handleQueryChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query.length > 0 && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleButtonClick}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect } from 'react';\nimport classNames from 'classnames';\n\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  loading: boolean,\n  setSelectedTodo: (value: Todo | null) => void,\n  selectedTodo?: Todo | null,\n  user?: User | null,\n  setLoading: (value: boolean) => void,\n  setUser: (value: User) => void,\n  todo: Todo,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  loading,\n  setSelectedTodo,\n  selectedTodo,\n  user,\n  setLoading,\n  setUser,\n  todo,\n}) => {\n  useEffect(() => {\n    setLoading(true);\n    getUser(todo.userId).then(setUser).finally(() => setLoading(false));\n  }, [todo.userId]);\n\n  return (\n    <div\n      className={classNames('modal', { ' is-active': selectedTodo })}\n      data-cy=\"modal\"\n    >\n      <div className=\"modal-background\" />\n\n      {loading && (\n        <Loader />\n      )}\n\n      <div className=\"modal-card\">\n        <header className=\"modal-card-head\">\n          <div\n            className=\"modal-card-title has-text-weight-medium\"\n            data-cy=\"modal-header\"\n          >\n            {`Todo #${selectedTodo?.id}`}\n          </div>\n\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            type=\"button\"\n            className=\"delete\"\n            data-cy=\"modal-close\"\n            onClick={() => setSelectedTodo(null)}\n          />\n        </header>\n\n        <div className=\"modal-card-body\">\n          <p className=\"block\" data-cy=\"modal-title\">\n            {selectedTodo?.title}\n          </p>\n\n          <p className=\"block\" data-cy=\"modal-user\">\n            {selectedTodo?.completed\n              ? <strong className=\"has-text-success\">Done</strong>\n              : <strong className=\"has-text-danger\">Planned</strong>}\n\n            {' by '}\n\n            <a href={`mailto:${user?.email}`}>\n              {user?.name}\n            </a>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, {\n  useEffect,\n  useState,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { User } from './types/User';\n\nfunction getFilteredTodos(\n  todos: Todo[],\n  query: string,\n  sortBy: string,\n) {\n  enum Status {\n    ALL = 'all',\n    ACTIVE = 'active',\n    COMPLETED = 'completed',\n  }\n\n  let filteredTodos = todos;\n\n  if (query.length > 0) {\n    filteredTodos = filteredTodos.filter(todo => (\n      todo.title.toLowerCase().includes(query.toLowerCase())\n    ));\n  }\n\n  switch (sortBy) {\n    case Status.ALL:\n      return filteredTodos;\n\n    case Status.ACTIVE:\n      return filteredTodos.filter(todo => todo.completed === false);\n\n    case Status.COMPLETED:\n      return filteredTodos.filter(todo => todo.completed === true);\n\n    default:\n      return filteredTodos;\n  }\n}\n\nexport const App: React.FC = () => {\n  const [loading, setLoading] = useState(false);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [user, setUser] = useState<User | null>(null);\n  const [query, setQuery] = useState('');\n  const [appliedQuery, setApliedQuery] = useState('');\n  const [status, setStatus] = useState('All');\n\n  useEffect(() => {\n    setLoading(true);\n    getTodos()\n      .then(setTodos)\n      .finally(() => setLoading(false));\n  }, []);\n\n  const filteredTodos = getFilteredTodos(todos, appliedQuery, status);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setQuery={setQuery}\n                setApliedQuery={setApliedQuery}\n                status={status}\n                setStatus={setStatus}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={filteredTodos}\n                    setSelectedTodo={setSelectedTodo}\n                    selectedTodo={selectedTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          loading={loading}\n          setSelectedTodo={setSelectedTodo}\n          selectedTodo={selectedTodo}\n          user={user}\n          setLoading={setLoading}\n          setUser={setUser}\n          todo={selectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}